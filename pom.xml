<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.microfocus.microservices</groupId>
    <artifactId>ring2park-microservices</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-parent</artifactId>
        <version>Greenwich.RELEASE</version>   
    </parent>
	
	<licenses>
        <license>
            <name>GNU General Public License</name>
            <url>https://opensource.org/licenses/gpl-license</url>
        </license>
    </licenses>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-boot.version>2.1.2.RELEASE</spring-boot.version>
        <spring-cloud-dependencies.version>Greenwich.RELEASE</spring-cloud-dependencies.version>
        <spring-cloud-starter.version>2.1.3.RELEASE</spring-cloud-starter.version>
        <commons-cli.version>1.4</commons-cli.version>
        <webjars-jquery.version>3.4.1</webjars-jquery.version>
        <webjars-bootstrap.version>3.4.1</webjars-bootstrap.version>
        <webjars-html5shiv.version>3.7.3</webjars-html5shiv.version>
        <webjars-respond.version>1.4.2</webjars-respond.version>
        <servlet-api.version>3.1.0</servlet-api.version>
		<fod.dir>fod</fod.dir>
        <!-- The main class to start by executing java -jar -->
        <start-class>com.microfocus.ring2parkms.Main</start-class>
        <!-- Default registration service and service ports -->
        <eureka-server>localhost</eureka-server>
        <eureka-port>1111</eureka-port>
		<!-- Actuator configuration -->
        <actuator-details>always</actuator-details>
        <actuator-endpoints>"health,info,beans,metrics,env,logfile"</actuator-endpoints>
        <!-- Logging configuration -->
        <logging-file>ring2park-microservices.log</logging-file>
    </properties>
	
	<modules>
		<module>eureka-service</module>
		<module>locations-service</module>
		<module>users-service</module>
		<module>web-ui</module>
	</modules>

    <dependencies>
        <dependency>
            <!-- Setup Spring Boot -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>

        <dependency>
            <!-- Setup Spring Data common components -->
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>

        <dependency>
            <!-- Setup Spring Data JPA Repository support -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <!-- Testing starter -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <dependency>
            <!-- Setup Spring MVC & REST, use Embedded Tomcat -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <!-- Setup embedded Jetty -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>

        <dependency>
            <!-- Setup thymeleaf templates -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <!-- In-memory database for testing/demos -->
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>

        <dependency>
            <!-- Spring Cloud starter -->
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
            <version>${spring-cloud-starter.version}</version>
        </dependency>

        <dependency>
            <!-- Netflix Eureka service registration -->
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
            <version>${spring-cloud-starter.version}</version>
        </dependency>

        <dependency>
            <!-- Setup Apapche Commons command line parsing -->
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>

        <!-- WebJars -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${webjars-jquery.version}</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${webjars-bootstrap.version}</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>html5shiv</artifactId>
            <version>${webjars-html5shiv.version}</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>respond</artifactId>
            <version>${webjars-respond.version}</version>
        </dependency>

    </dependencies>

	<profiles>
	<!-- Profile for preparing files for Fortify scans -->
        <profile>
            <id>fortify</id>
            <properties>
                <packaging.type>jar</packaging.type>
            </properties>
            <build>
                <plugins>
                    <!-- Download and copy all dependencies on "verify" phase for Fortify On Demand -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>download-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>sources</goal>
                                </goals>
                                <configuration>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <excludeGroupIds>
                                        junit,org.easymock,${project.groupId}
                                    </excludeGroupIds>
                                    <!-- uncomment to only include direct dependencies -->
                                    <excludeTransitive>false</excludeTransitive>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>target/classes/lib</outputDirectory>
                                    <!--classifier>sources</classifier-->
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <excludeGroupIds>
                                        junit,org.easymock,${project.groupId}
                                    </excludeGroupIds>
                                    <!-- uncomment to only include direct dependencies -->
                                    <excludeTransitive>false</excludeTransitive>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <verbose>true</verbose>
                            <detail>true</detail>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                    <!-- Create a source bundle (.jar) for Fortify on Demand
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin-->
                    <!-- Copy minimal set of files to FOD upload directory -->
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>copy-fortify-resources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/${fod.dir}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/</directory>
                                            <includes>
                                                <include>src/**/*</include>
                                            </includes>
                                            <excludes>
                                                <!-- exclude test source code -->
                                                <exclude>src/test/**/*</exclude>
                                            </excludes>
                                        </resource>
                                        <!-- include third party dependencies -->
                                        <resource>
                                            <directory>${basedir}/target/classes/lib</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
	</profiles>
	
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
			
			<!-- Display active profile in compile phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <executions>
                    <execution>
                        <id>show-profiles</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>active-profiles</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			
			<plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <arguments>--eurekaHostname=${eureka-server},--eurekaPort=${eureka-port}</arguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>build-classpath</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <!-- configure the plugin here -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			
			<!-- Cleanup logs and FOD upload directory -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${fod.dir}</directory>
                        </fileset>
						<fileset>
							<directory>${project.basedir}</directory>
							<includes>
								<include>**/*.tmp</include>
								<include>**/*.log</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
                    </filesets>
                </configuration>
            </plugin>
			
        </plugins>
    </build>

</project>
